ECLiPSe is a software system for the development and deployment of Constraint Programming applications, e.g. in the areas of optimization, planning, scheduling, resource allocation, timetabling, transport etc. It is also suited for teaching most aspects of combinatorial problem solving, e.g. problem modeling, constraint programming, mathematical programming, and search techniques. It contains constraint solver libraries, a high-level modeling and control language (a superset of Prolog), interfaces to third-party solvers, an integrated development environment and interfaces for embedding into host environments. ECLiPSe was developed until 1995 at the European Computer‐Industry Research Centre (ECRC) in Munich and then until 2005 at the Centre for Planning and Resource Control at Imperial College London (IC-Parc). It was purchased by Cisco Systems. In September 2006, it was released as open source software under an equivalent of the Mozilla Public License, and is now hosted on SourceForge. ==Language== The ECLiPSe language is largely backward- compatible with Prolog and supports different dialects, including ISO Prolog. Thanks to its declarative nature, it can be used both as a modelling language for the description of problems and as a general purpose programming language. Beyond the basic Prolog data types, the following are available: strings, unlimited precision integer and rational numbers, and floating point intervals. Array syntax and structures with field names are also supported and especially useful in constraint modelling. A logical iteration construct eliminates the need for most simple recursion patterns. ECLiPSe provides comprehensive facilities to implement data-driven control behaviour. These include declarative delay-clauses as well as primitives for meta-programmed control like explicit goal suspension, flexible triggering facilities and execution priorities. Together with the attributed variable data type, this is the key to many extensions to the basic logic programming language, including all constraint-based functionality. The system calls user-definable event handlers when it encounters attributed variables in certain contexts, e.g. unification. The module system controls the visibility of predicates, non- logical stores, source transformations and syntax settings. Module interfaces can be extended and restricted, and modules written in different language dialects can be mixed within one application. Programs may contain structured comments from which reference documentation can be generated. ==Libraries== ECLiPSe provides several libraries of constraint solvers which can be used in application programs: Arithmetic constraints over finite domains, finite set constraints, generalized propagation, interval reasoning over non-linear constraints, interfaces to external simplex solvers, constraint handling rules (CHR) and more. Other libraries implement search methods like branch-and- bound, repair-based search, limited discrepancy search. ECLiPSe interfaces to external solvers, in particular the COIN-OR, CPLEX, and Xpress-MP linear and mixed-integer programming solvers, and the Gecode solver library. Compatibility libraries for ISO Prolog and other Prolog dialects (C-Prolog, Quintus, SICStus, SWI-Prolog) enable the reuse of libraries written in those dialects. Other utility libraries, including a number of popular public domain ones, are included in the distribution. ==System Architecture== The system includes an incremental compiler which translates source code into virtual machine code. The compiler optimizes index selection, unification order, inlining of control constructs and can take mode information into account. The runtime system implements the virtual machine, automatic memory management with garbage collection of stacks and dictionary, event handling and data- driven execution. Versions of ECLiPSe implement OR-parallelism. ECLiPSe components can be integrated into software via a low-level C or C++ interface, or via high-level interfaces to Java and Tcl. ==External links== * * * Constraint Logic Programming using ECLiPSe, textbook by Krzysztof Apt and Mark Wallace * A Quick and Gentle Guide to Constraint Logic Programming via ECLiPSe, textbook by Antoni Niederliński * ECLiPSE eLearning Website (with video tutorials) ==References== Category:Constraint logic programming Category:Free compilers and interpreters Category:Logic programming languages Category:Prolog programming language family Category:Dynamically typed programming languages Category:High-level programming languages .